apply plugin: 'java'

defaultTasks 'clean', 'test' 


sourceSets {
	main {
		java {srcDir 'src/main/java'}
		resources {srcDir 'src/main/resources'}
	}
	test {
		java {srcDir 'src/test/java'}
		resources {srcDir 'src/test/resources'}
	}
}

repositories {
  mavenCentral()
}

dependencies {
  compile 'junit:junit:4.12'
  compile 'org.hamcrest:hamcrest-all:1.3'
  compile 'com.codeborne:selenide:4.10.01'
  compile 'org.seleniumhq.selenium:selenium-safari-driver:3.8.1'
  compile group: 'org.easytesting', name: 'fest-assert-core', version: '2.0M10'
  
}

task libs(type: Sync) {
  from configurations.testCompile
  into "$buildDir/lib"
}

classes.dependsOn libs

[compileJava, compileTestJava]*.options.collect {options -> options.encoding = 'UTF-8'}
[compileJava, compileTestJava]*.options.collect {options -> options.debug = true}
[compileJava, compileTestJava]*.sourceCompatibility = 1.8
[compileJava, compileTestJava]*.targetCompatibility = 1.8

tasks.withType(Test).all { testTask ->
  testTask.systemProperties = [
    'file.encoding': 'UTF-8',
    'BUILD_URL': System.getenv()['BUILD_URL']
  ]
  testTask.testLogging.showStandardStreams = true
  //testTask.exclude 'org/selenide/examples/google/classic_page_object/**/*'
  testTask.outputs.upToDateWhen { false }
}

task chrome(type: Test) {
  systemProperties['selenide.browser'] = 'chrome'
}

task firefox(type: Test) {
  systemProperties['selenide.browser'] = 'firefox'
}

task ie(type: Test) {
  systemProperties['selenide.browser'] = 'ie'
}

task edge(type: Test) {
  systemProperties['selenide.browser'] = 'edge'
}

task htmlunit(type: Test) {
  systemProperties['selenide.browser'] = 'htmlunit'
}

task phantomjs(type: Test) {
  systemProperties['selenide.browser'] = 'phantomjs'
}

// You must enable the 'Allow Remote Automation' option in Safari's Develop menu to control Safari via WebDriver.
task safari(type: Test) {
  systemProperties['selenide.browser'] = 'safari'
}

test {

	systemProperties = System.properties
	
	
	if(project.hasProperty("jenkins") == true ) {
	
		
		def job_url = System.getenv("JOB_URL") as String ?:""
		println "job url : " + job_url
		def build_number = System.getenv("BUILD_NUMBER") as String ?:""
		//SystemProperty "selenide.reportUrl", job_url + build_number + "/artifact/"
		System.setProperty("selenide.reportsUrl", job_url + build_number + "/artifact/")
		
	}
}

